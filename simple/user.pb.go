// Code generated by protoc-gen-go. DO NOT EDIT.
// source: user.proto

package simple

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// User 的数据模型
type UserModel struct {
	Userid               int64    `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	Username             string   `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserModel) Reset()         { *m = UserModel{} }
func (m *UserModel) String() string { return proto.CompactTextString(m) }
func (*UserModel) ProtoMessage()    {}
func (*UserModel) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_bac2f07cf50466f2, []int{0}
}
func (m *UserModel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserModel.Unmarshal(m, b)
}
func (m *UserModel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserModel.Marshal(b, m, deterministic)
}
func (dst *UserModel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserModel.Merge(dst, src)
}
func (m *UserModel) XXX_Size() int {
	return xxx_messageInfo_UserModel.Size(m)
}
func (m *UserModel) XXX_DiscardUnknown() {
	xxx_messageInfo_UserModel.DiscardUnknown(m)
}

var xxx_messageInfo_UserModel proto.InternalMessageInfo

func (m *UserModel) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

func (m *UserModel) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

// 请求结构
type UserRequest struct {
	Userid               int64    `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_bac2f07cf50466f2, []int{1}
}
func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (dst *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(dst, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUserid() int64 {
	if m != nil {
		return m.Userid
	}
	return 0
}

// 响应结构
type UserResponse struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserResponse) Reset()         { *m = UserResponse{} }
func (m *UserResponse) String() string { return proto.CompactTextString(m) }
func (*UserResponse) ProtoMessage()    {}
func (*UserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_bac2f07cf50466f2, []int{2}
}
func (m *UserResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserResponse.Unmarshal(m, b)
}
func (m *UserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserResponse.Marshal(b, m, deterministic)
}
func (dst *UserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserResponse.Merge(dst, src)
}
func (m *UserResponse) XXX_Size() int {
	return xxx_messageInfo_UserResponse.Size(m)
}
func (m *UserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserResponse proto.InternalMessageInfo

func (m *UserResponse) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *UserResponse) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

// 响应结构
type UserListResponse struct {
	// repeated 重复(数组)
	UserList             []*UserModel `protobuf:"bytes,1,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserListResponse) Reset()         { *m = UserListResponse{} }
func (m *UserListResponse) String() string { return proto.CompactTextString(m) }
func (*UserListResponse) ProtoMessage()    {}
func (*UserListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_user_bac2f07cf50466f2, []int{3}
}
func (m *UserListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserListResponse.Unmarshal(m, b)
}
func (m *UserListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserListResponse.Marshal(b, m, deterministic)
}
func (dst *UserListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserListResponse.Merge(dst, src)
}
func (m *UserListResponse) XXX_Size() int {
	return xxx_messageInfo_UserListResponse.Size(m)
}
func (m *UserListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UserListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UserListResponse proto.InternalMessageInfo

func (m *UserListResponse) GetUserList() []*UserModel {
	if m != nil {
		return m.UserList
	}
	return nil
}

func init() {
	proto.RegisterType((*UserModel)(nil), "simple.UserModel")
	proto.RegisterType((*UserRequest)(nil), "simple.UserRequest")
	proto.RegisterType((*UserResponse)(nil), "simple.UserResponse")
	proto.RegisterType((*UserListResponse)(nil), "simple.UserListResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserClient is the client API for User service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserClient interface {
	// 定义 GetUser 方法
	GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserModel, error)
	// 定义 GetUserList 方法
	GetUserList(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserListResponse, error)
	// 定义 SetUser 方法
	SetUser(ctx context.Context, in *UserModel, opts ...grpc.CallOption) (*UserResponse, error)
}

type userClient struct {
	cc *grpc.ClientConn
}

func NewUserClient(cc *grpc.ClientConn) UserClient {
	return &userClient{cc}
}

func (c *userClient) GetUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserModel, error) {
	out := new(UserModel)
	err := c.cc.Invoke(ctx, "/simple.User/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) GetUserList(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*UserListResponse, error) {
	out := new(UserListResponse)
	err := c.cc.Invoke(ctx, "/simple.User/GetUserList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userClient) SetUser(ctx context.Context, in *UserModel, opts ...grpc.CallOption) (*UserResponse, error) {
	out := new(UserResponse)
	err := c.cc.Invoke(ctx, "/simple.User/SetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServer is the server API for User service.
type UserServer interface {
	// 定义 GetUser 方法
	GetUser(context.Context, *UserRequest) (*UserModel, error)
	// 定义 GetUserList 方法
	GetUserList(context.Context, *UserRequest) (*UserListResponse, error)
	// 定义 SetUser 方法
	SetUser(context.Context, *UserModel) (*UserResponse, error)
}

func RegisterUserServer(s *grpc.Server, srv UserServer) {
	s.RegisterService(&_User_serviceDesc, srv)
}

func _User_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simple.User/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_GetUserList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).GetUserList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simple.User/GetUserList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).GetUserList(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _User_SetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserModel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServer).SetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/simple.User/SetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServer).SetUser(ctx, req.(*UserModel))
	}
	return interceptor(ctx, in, info, handler)
}

var _User_serviceDesc = grpc.ServiceDesc{
	ServiceName: "simple.User",
	HandlerType: (*UserServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _User_GetUser_Handler,
		},
		{
			MethodName: "GetUserList",
			Handler:    _User_GetUserList_Handler,
		},
		{
			MethodName: "SetUser",
			Handler:    _User_SetUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "user.proto",
}

func init() { proto.RegisterFile("user.proto", fileDescriptor_user_bac2f07cf50466f2) }

var fileDescriptor_user_bac2f07cf50466f2 = []byte{
	// 246 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0xb1, 0x4a, 0xc4, 0x40,
	0x10, 0x86, 0x6f, 0xcd, 0x99, 0x33, 0x13, 0x8b, 0x73, 0x14, 0x09, 0xa9, 0xc2, 0x82, 0x90, 0x2a,
	0xc5, 0xdd, 0xd5, 0x0a, 0x36, 0x36, 0xda, 0x44, 0xac, 0x45, 0xcd, 0x20, 0x81, 0xe4, 0x36, 0x66,
	0xf6, 0x1e, 0xcc, 0x37, 0x94, 0xd9, 0xac, 0x21, 0x12, 0xaf, 0xfb, 0x77, 0x98, 0xef, 0x9b, 0x19,
	0x16, 0xe0, 0xc0, 0xd4, 0x17, 0x5d, 0x6f, 0xac, 0xc1, 0x90, 0xeb, 0xb6, 0x6b, 0x48, 0xdf, 0x41,
	0xf4, 0xc2, 0xd4, 0x3f, 0x99, 0x8a, 0x1a, 0xbc, 0x86, 0x50, 0x5a, 0xea, 0x2a, 0x51, 0x99, 0xca,
	0x83, 0xd2, 0xbf, 0x30, 0x85, 0x33, 0x49, 0xfb, 0xb7, 0x96, 0x92, 0x93, 0x4c, 0xe5, 0x51, 0x39,
	0xbe, 0xf5, 0x0d, 0xc4, 0x22, 0x28, 0xe9, 0xeb, 0x40, 0x6c, 0x8f, 0x29, 0xf4, 0x0e, 0xce, 0x87,
	0x36, 0xee, 0xcc, 0x9e, 0x09, 0x11, 0x96, 0x1f, 0xa6, 0x22, 0xd7, 0x75, 0x5a, 0xba, 0x8c, 0x6b,
	0x08, 0x5a, 0xfe, 0xf4, 0x13, 0x24, 0xea, 0x7b, 0x58, 0x0b, 0xf5, 0x58, 0xb3, 0x1d, 0xc9, 0x02,
	0x22, 0x71, 0xbe, 0x36, 0x35, 0xdb, 0x44, 0x65, 0x41, 0x1e, 0x6f, 0x2e, 0x8a, 0xe1, 0x9a, 0x62,
	0x3c, 0x65, 0x58, 0x50, 0xb8, 0xcd, 0xb7, 0x82, 0xa5, 0xd4, 0x71, 0x0b, 0xab, 0x07, 0xb2, 0x2e,
	0x5e, 0x4e, 0x01, 0xbf, 0x7a, 0x3a, 0xb7, 0xe8, 0x05, 0xde, 0x42, 0xec, 0x21, 0x91, 0xfd, 0x0f,
	0x26, 0xd3, 0xe2, 0x74, 0x57, 0xbd, 0xc0, 0x1d, 0xac, 0x9e, 0xfd, 0xd0, 0xb9, 0x3f, 0xbd, 0xfa,
	0xab, 0xfb, 0xa5, 0xde, 0x43, 0xf7, 0x49, 0xdb, 0x9f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x94, 0x2b,
	0x16, 0xe4, 0xb2, 0x01, 0x00, 0x00,
}
